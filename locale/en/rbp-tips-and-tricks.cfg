[tips-and-tricks-item-name]
recursive-pb-common=Recursive blueprints+
recursive-bp-offset-tool=Offset calculation tool

[tips-and-tricks-item-description]
recursive-pb-common=The BR+ mod consists of 3 devices for automated use of blueprints.\nAll devices are controlled by logic signals.\n\nCommon signals for all devices:\nThe values of the [img=virtual-signal.signal-X] and [img=virtual-signal.signal-Y] signals indicate how many tiles need to be moved away from this device horizontally and vertically (positive directions are to the right and down). Further in these hints, the combination of these two signals will be indicated as a [color=yellow]coordinates[/color].\n\nThe values of the [img=virtual-signal.signal-W] and [img=virtual-signal.signal-H] signals determine the width and height of the area.\nWhen map setting "[font=default-bold]__1__[/font]" selected to "[font=default-bold]__2__[/font]" (by default), the width and height essentially indicate an offset from the [color=yellow]coordinates[/color], so negative width and height values can be used. For the setting value "[font=default-bold]__3__[/font]", negative values of width and height do not make sense, so in this case only the sign of the number will be ignored.\nFurther in these hints, the combination of these four signals will be indicated as an [color=yellow]area[/color].
recursive-pb-scanner=Counts the number of objects in the specified [color=yellow]area[/color] and outputs the result as signals for the logical network.\nSince some categories of objects, such as buildings and their ghosts, are indicated by the same signals, it is necessary to specify a filter for scanning with signal [img=virtual-signal.signal-F]. A particular values for the filter can be found in the scanner itself by clicking on the filter signal button.\nScanning is not performed continuously, but only when any input signal changes.

[rbp-tnt-description-parts]
deployer-intro=This version is controlled by vanilla signals only.
deployer-control=[img=virtual-signal.signal-0] signal means "use the item in the inventory". The action depends on which item is in the inventory.\n(Previously, [img=item.construction-robot] signal was used, but it was replaced by a virtual signal, i.e. not an [font=default-bold]item[/font]-signal. When using old blueprints, see the map settings for changing the control signal)
deployer-plans=A deconstruction/upgrade plan for the specified [color=yellow]area[/color] will be used. The deployer will never mark himself for deconstruction.\nIf the signal [img=virtual-signal.signal-0]<0, the deconstruction/upgrade plan will be used in the "cancel" mode.
deployer-book=The action depends on the chosen item.\nIf the signal [img=virtual-signal.signal-0]<0, the sign of the number will be ignored, and the deconstruction/upgrade plan will be used in the "cancel" mode.
deployer-misc=[font=default-bold]Additional commands.[/font]\n[img=item.deconstruction-planner] signal is used as an independent command:\n-1 = Use a deconstruction plan without a filter on the specified [color=yellow]area[/color]. The deployer will never mark himself for deconstruction.\n-2 = Mark deployer for deconstruction.\n-3 = Cancel deconstruction orders on the specified [color=yellow]area[/color].\nThe following 4 commands use the item-signals to configure the deconstruction plan filter:\n-4 = Deconstruction, whitelist filter.\n-5 = Deconstruction, blacklist filter.\n-6 = Cancel deconstruction, whitelist filter.\n-7 = Cancel deconstruction, blacklist filter.\nIn addition to item-signals, filter are also used: [img=virtual-signal.signal-T] = Trees, [img=virtual-signal.signal-R] = Rocks, [img=virtual-signal.signal-C] = Cliffs.
deployer-copy=[font=default-bold]Copying/deleting blueprints.[/font]

blueprint-item=Deploy blueprint at the specified [color=yellow]coordinates[/color]. The construction mode is "forced": it puts what it can without paying attention to obstacles, adds landfill to the water, interfering trees/stones/rocks are marked for deconstruction.\nTo change the center of the blueprint, enable grid size (1x1 is recommended), and set an absolute reference point.\nAdditional parameters:\n__1__ signal rotates the blueprint. 1 -> 90° CW, 2 -> 180°, 3 -> 90° CCW.\n__2__>0 - use the "superforced" construction mode (i.e. "forced" + interfering friendly buildings are marked for deconstruction).
book-navigation=__1__ signal indicates the number of the slot in the book to be used. If there is a book in the selected slot, then the slot indicated by the __2__ signal will be selected. If there is another book there, then signal __3__ is used for the next selection, and so on up to signal __4__.
action-copy-bp=__1__ Copy blueprint or blueprint book to the deployer inventory.\nThe original blueprint must be in a chest (or inserter with read hand contents) on the same circuit network as the deployer chest. If there are several blueprints in the network, then the one that requires the least number of wire hops will be copied.
action-delete-bp=__1__ Delete blueprint or blueprint book from the deployer inventory.\n(It does not remove foreign items, so do not try to use specialized device as a trash bin!)
action-debug=[font=default-bold]Debug.[/font]\n[img=virtual-signal.signal-L] signal is used to display debug messages (it is necessary to enable the trigger condition in the mod settings). Each activation will display in the chat the location of the triggered deployer, the name of the blueprint and the place where the blueprint is applied (if the [color=yellow]coordinates[/color] are specified).\n[color=yellow][font=default-bold]Warning[/font][/color]: The chat may omit some of the messages if they are displayed very quickly.

deployer2-intro=This version is controlled by custom signals.\n\n__1__ signal is used for control. The action and additional parameters depend on the value of the signal. The signals that influence the action will be indicated in brackets.
deployer2-navigation=__1__ signal means "navigation through nested blueprint books".
deployer2-wires=The [color=yellow]2W[/color] mark indicates the split of the input wires.\nBy default both wires of the deployer work as a combined input. Any command with a [color=yellow]2W[/color] mark divides the inputs into the main and additional ones. The wire that received the __1__ signal will become the [color=yellow]main[/color] one. If this signal is received from both wires, then this command will be ignored.\nThe main wire reads commands and parameters, just like any other commands.\nAn additional wire is used only by commands with a [color=yellow]2W[/color] mark.
deployer2-com1=[font=default-bold][[color=red]1[/color]][/font] - use the item in the inventory. The action depends on which item is in the inventory.
deployer2-com1-plans=A deconstruction/upgrade plan for the specified [color=yellow]area[/color] will be used.
deployer2-com1-book=The action depends on the chosen item.
deployer2-com2=[font=default-bold][[color=red]2[/color]][/font] - is the same as [font=default-bold][[color=red]1[/color]][/font], but if the item turns out to be a blueprint, parameterization will be applied to it (replacing the parameter signals with the specified signal, as well as replacing the specified numbers with others).
deployer2-com2-signals=[font=default-bold]Parameter replacement:[/font] numeric signals (from [img=virtual-signal.signal-0] to [img=virtual-signal.signal-9]) indicate which signal to change. The value of the numeric signal indicates which of the present signals (by coincidence of the value) should be pasted instead of the corresponding parameter. Exception: values from 1 to 9 will paste the corresponding numeric signal, value 10 will paste [img=virtual-signal.signal-0] signal.\nFor example, to replace [img=item.parameter-1] with [img=item.iron-gear-wheel], there should be signals [img=item.iron-gear-wheel]=11 and [img=virtual-signal.signal-1]=11.
deployer2-com2-numbers=[font=default-bold]Number replacement:[/font] a pair of letter signals ([img=virtual-signal.signal-A]-[img=virtual-signal.signal-K], [img=virtual-signal.signal-B]-[img=virtual-signal.signal-L], etc. up to [img=virtual-signal.signal-J]-[img=virtual-signal.signal-T]) indicate which number to find and which number to replace it with.\nFor example, to replace "5001" with "10", there should be signals [img=virtual-signal.signal-A]=5001 and [img=virtual-signal.signal-K]=10.
deployer2-com2-info=[font=default-bold]Note:[/font] this parameterization does not support parameters-components for recipes, formulas, and filters/priorities for turrets. If something goes completely wrong, a error message will be displayed in the chat. Please inform the author of the mod about such cases.

deployer2-com10=[font=default-bold][[color=red]10[/color]][/font] - Use a deconstruction plan without a filter on the specified [color=yellow]area[/color] (__1__)
deployer2-com11=[font=default-bold][[color=red]11[/color]][/font] - Use a deconstruction plan with a filter (item-signals) on the specified [color=yellow]area[/color] (__1__)\n__2__>0 - trees and rock only mode. In this case, the item-signals will be ignored.\n__3__>0 - the specified items will be added to the filter marked as "any quality".
deployer2-com20=[font=default-bold][[color=red]20[/color]][/font] - Use a upgrade plan without a filter on the specified [color=yellow]area[/color] (__1__)

deployer2-com30=[font=default-bold][[color=red]30[/color]][/font] - Read signals from a constant combinator at the specified [color=yellow]coordinates[/color] ([color=yellow]2W[/color] __1__)\n__2__ - selecting the section to be read (read all when 0).\n__3__>0 - read the signals from the specified section, even if it is turned off.
deployer2-com31=[font=default-bold][[color=red]31[/color]][/font] - Write signals in a constant combinator at the specified [color=yellow]coordinates[/color] ([color=yellow]2W[/color] __1__)\n__2__>0 - save the selected section as disabled.
deployer2-com32=[font=default-bold][[color=red]32[/color]][/font] - Turnt On/Off a constant combinator at the specified [color=yellow]coordinates[/color] (__1__)
deployer2-com33=[font=default-bold][[color=red]33[/color]][/font] - Clear a constant combinator at the specified [color=yellow]coordinates[/color].
deployer2-com40=[font=default-bold][[color=red]40[/color]][/font] - Clear output signals.
deployer2-com41=[font=default-bold][[color=red]41[/color]][/font] - Reset deployer I/O state.

deployer2-com100-head=[font=default-bold][[color=red]100[/color]][/font] -
deployer2-com120-head=[font=default-bold][[color=red]120[/color]][/font] -

offset-tool0=This tool makes it easier to find the offset of an [color=yellow]area[/color] relative to the selected object in the form of [img=virtual-signal.signal-X][img=virtual-signal.signal-Y] coordinates and the size of [img=virtual-signal.signal-W][img=virtual-signal.signal-H]. To use it, take the tool (located in the shortcut bar) and follow these steps:
offset-tool1=1. Selecting a reference point: Hold down the __CONTROL__select-for-cancel-deconstruct__ and select [entity=blueprint-deployer2], [entity=recursive-blueprints-scanner] or any desired building.
offset-tool2=2. Offset measurement: Hold down the __CONTROL__select-for-blueprint__ to select the desired [color=yellow]area[/color]. The calculated offset values will be displayed in the chat, which you can use as is or proceed to the next step.
offset-tool3=3. Write to the constant combinator: Hold down the __CONTROL__reverse-select__ or __CONTROL__deselect__ to select the [entity=constant-combinator] in which you want to write the result of the last measurement. The writing is performed only in the first section, the existing values of the necessary signals will be overwritten.
offset-tool4=Note: The reference point and the last measurement are saved individually for each player, so you can "drop" the tool between the above steps.
