local function rbp_signals(list)
  if type(list) == "string" then
    return "[img=virtual-signal.rbp-"..list.."]"
  end
  local s = ""
  for _, name in pairs(list) do
    s = s.."[img=virtual-signal.rbp-"..name.."]"
  end
  return s
end

data:extend{
  {
    type = "tips-and-tricks-item-category",
    name = "recursive-pb-tips",
    starting_status = "unlocked",
    order = "recursive",
  },
  {
    type = "tips-and-tricks-item",
    name = "recursive-pb-common",
    is_title = true,
    starting_status = "unlocked",
    category = "recursive-pb-tips",
    order = "0",
    localised_description = {
      "tips-and-tricks-item-description.recursive-pb-common",
      {"mod-setting-name.recursive-blueprints-area"},
      {"string-mod-setting.recursive-blueprints-area-corner"},
      {"string-mod-setting.recursive-blueprints-area-center"},
    },
  },
  {
    type = "tips-and-tricks-item",
    name = "recursive-pb-deployer",
    tag = "[item=blueprint-deployer]",
    --starting_status = "unlocked",
    category = "recursive-pb-tips",
    indent = 1,
    order = "1",
    dependencies = {"recursive-pb-common"},
    localised_name = {"entity-name.blueprint-deployer"},
    localised_description = {
      "",
      {"",
        {"item-description.blueprint-deployer"}, "\n",
        {"rbp-tnt-description-parts.deployer-intro"}, "\n\n",
        {"rbp-tnt-description-parts.deployer-control"}, "\n\n",
        "[font=default-bold]", {"item-name.blueprint"}, "[/font] [img=item.blueprint]\n",
        {"rbp-tnt-description-parts.blueprint-item", "[img=virtual-signal.signal-R]", "[img=virtual-signal.signal-F]"}, "\n\n",
      },
      {"",
        "[font=default-bold]", {"item-name.deconstruction-planner"}, "/", {"item-name.upgrade-planner"}, "[/font] [img=item.deconstruction-planner]/[img=item.upgrade-planner]\n",
        {"rbp-tnt-description-parts.deployer-plans"}, "\n\n",
        "[font=default-bold]", {"item-name.blueprint-book"}, "[/font] [img=item.blueprint-book]\n",
        {"rbp-tnt-description-parts.deployer-book"}, "\n",
      },
      {"",
        {"rbp-tnt-description-parts.book-navigation", "[img=virtual-signal.signal-0]", "[img=virtual-signal.signal-1]", "[img=virtual-signal.signal-2]", "[img=virtual-signal.signal-5]"}, "\n\n",
        {"rbp-tnt-description-parts.deployer-misc"}, "\n\n",
        {"rbp-tnt-description-parts.deployer-copy"}, "\n",
        {"rbp-tnt-description-parts.action-copy-bp", "[img=virtual-signal.signal-C]=1"}, "\n",
        {"rbp-tnt-description-parts.action-delete-bp", "[img=virtual-signal.signal-C]=-1"}, "\n\n",
        {"rbp-tnt-description-parts.action-debug"},
      },
    },
  },
  {
    type = "tips-and-tricks-item",
    name = "recursive-pb-deployer2",
    tag = "[item=blueprint-deployer]",
    --starting_status = "unlocked",
    category = "recursive-pb-tips",
    indent = 1,
    order = "2",
    dependencies = {"recursive-pb-common"},
    localised_name = {"entity-name.blueprint-deployer2"},
    localised_description = {
      "",
      {"",
        {"item-description.blueprint-deployer2"}, "\n",
        {"rbp-tnt-description-parts.deployer2-intro", rbp_signals("command")}, "\n\n",
        {"rbp-tnt-description-parts.deployer2-navigation", "[virtual-signal=rbp-book-layer1]"}, "\n",
        {"rbp-tnt-description-parts.book-navigation", "[img=virtual-signal.rbp-book-layer1]", "[img=virtual-signal.rbp-book-layer2]", "[img=virtual-signal.rbp-book-layer3]", "[img=virtual-signal.rbp-book-layer6]"}, "\n\n",
        {"rbp-tnt-description-parts.deployer2-wires", rbp_signals("command")}, "\n\n",
      },
      {"",
        {"rbp-tnt-description-parts.deployer2-com1"}, "\n",
        "[font=default-bold]", {"item-name.blueprint"}, "[/font] [img=item.blueprint] ("..rbp_signals({"rotate-bp","superforce"})..")\n",
        {"rbp-tnt-description-parts.blueprint-item", rbp_signals("rotate-bp"), rbp_signals("superforce")}, "\n\n",
        "[font=default-bold]", {"item-name.deconstruction-planner"}, "[/font] [img=item.deconstruction-planner] ("..rbp_signals({"superforce", "cancel"})..") / ",
        "[font=default-bold]", {"item-name.upgrade-planner"}, "[/font] [img=item.upgrade-planner] ("..rbp_signals({"cancel"})..")\n",
        {"rbp-tnt-description-parts.deployer2-com1-plans"}, "\n\n",
      },
      {"",
        "[font=default-bold]", {"item-name.blueprint-book"}, "[/font] [img=item.blueprint-book] ([img=virtual-signal.rbp-book-layer1])\n",
        {"rbp-tnt-description-parts.deployer2-com1-book"}, "\n\n",
        {"rbp-tnt-description-parts.deployer2-com10", rbp_signals({"superforce", "cancel"})}, "\n",
        {"rbp-tnt-description-parts.deployer2-com11", rbp_signals({"superforce", "cancel", "invert-filter", "enviroment", "quality"}), rbp_signals("enviroment"), rbp_signals("quality")}, "\n",
        {"rbp-tnt-description-parts.deployer2-com20", rbp_signals({"cancel"})}, "\n\n",
      },
      {"",
        {"rbp-tnt-description-parts.deployer2-com30", rbp_signals({"enviroment", "superforce"}), rbp_signals("enviroment"), rbp_signals("superforce")}, "\n",
        {"rbp-tnt-description-parts.deployer2-com31", rbp_signals({"enviroment", "invert-filter"}), rbp_signals("invert-filter")}, "\n",
        {"rbp-tnt-description-parts.deployer2-com32", rbp_signals({"invert-filter"})}, "\n",
        {"rbp-tnt-description-parts.deployer2-com33"}, "\n",
        {"rbp-tnt-description-parts.deployer2-com40"}, "\n",
        {"rbp-tnt-description-parts.deployer2-com41"}, "\n\n",
      },
      {"",
        {"rbp-tnt-description-parts.action-copy-bp", {"rbp-tnt-description-parts.deployer2-com100-head"}}, "\n",
        {"rbp-tnt-description-parts.action-delete-bp", {"rbp-tnt-description-parts.deployer2-com120-head"}}, "\n\n",
        {"rbp-tnt-description-parts.action-debug"},
      }
    },
  },
  {
    type = "tips-and-tricks-item",
    name = "recursive-pb-scanner",
    tag = "[item=recursive-blueprints-scanner]",
    --starting_status = "unlocked",
    category = "recursive-pb-tips",
    indent = 1,
    order = "3",
    dependencies = {"recursive-pb-common"},
    localised_name = {"entity-name.recursive-blueprints-scanner"},
  },
}
